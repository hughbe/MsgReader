import XCTest
import CompressedRtf
import MAPI
@testable import MsgReader

final class AppointmentTests: XCTestCase {
    public func testSimpleAppointment() throws {
        let data = try getData(name: "hughbe/Appointment")
        let msg = try MsgFile(data: data)
        
        XCTAssertEqual(.none, msg.recurrenceType!)
        XCTAssertFalse(msg.appointmentNotAllowPropose!)
        XCTAssertEqual("", msg.organizerAlias!)
        XCTAssertEqual(1603355400.0, msg.clipEnd!.timeIntervalSince1970)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionStartDisplay!.majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionStartDisplay!.minorVersion)
        XCTAssertEqual(0x000C, msg.appointmentTimeZoneDefinitionStartDisplay!.cbHeader)
        XCTAssertEqual(0x0002, msg.appointmentTimeZoneDefinitionStartDisplay!.reserved)
        XCTAssertEqual(0x0003, msg.appointmentTimeZoneDefinitionStartDisplay!.cchKeyName)
        XCTAssertEqual("UTC", msg.appointmentTimeZoneDefinitionStartDisplay!.keyName)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionStartDisplay!.cRules)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].reserved)
        XCTAssertEqual([.effectiveTzReg], msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].flags)
        XCTAssertEqual(1601, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lStandardBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMilliseconds)
        XCTAssertEqual("Location", msg.eventLocation!)
        XCTAssertEqual("", msg.collaborateDoc!)
        XCTAssertEqual(0, msg.appointmentSequence!)
        XCTAssertEqual("Body\r\n", msg.body!)
        XCTAssertEqual(1603368473.0, msg.validFlagStringProof!.timeIntervalSince1970)
        XCTAssertEqual("Appointment Name", msg.normalizedSubject!)
        XCTAssertEqual(1033, (msg.getProperty(set: .common, lid: 0x000085EB) as UInt32?)!)
        XCTAssertEqual(0x00000000, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.sentRepresentingEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.sentRepresentingEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .tagSenderName) as String?)!)
        XCTAssertEqual("", msg.onlinePassword!)
        XCTAssertEqual("EX", (msg.getProperty(id: .tagSenderAddressType) as String?)!)
        XCTAssertEqual(1603368473.0, msg.clientSubmitTime!.timeIntervalSince1970)
        XCTAssertFalse(msg.originatorDeliveryReportRequested!)
        XCTAssertEqual("(UTC) Coordinated Universal Time", msg.timeZoneDescription!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.senderSearchKey!))
        XCTAssertEqual("", msg.displayCc!)
        XCTAssertEqual("IPM.Appointment", msg.messageClass!)
        XCTAssertEqual(0, msg.appointmentProposalNumber!)
        XCTAssertEqual(1603353600.0, msg.reminderTime!.timeIntervalSince1970)
        XCTAssertEqual("16.0", msg.currentVersionName!)
        XCTAssertTrue(msg.replyRequested!)
        XCTAssertFalse(msg.`private`!)
        XCTAssertEqual(15, msg.reminderDelta!)
        XCTAssertEqual(1603368498.0, msg.creationTime!.timeIntervalSince1970)
        XCTAssertEqual(1603353600.0, msg.commonStart!.timeIntervalSince1970)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.sentRepresentingSearchKey!))
        XCTAssertEqual([.read], msg.access)
        XCTAssertEqual([], msg.appointmentStateFlags)
        XCTAssertEqual("pstreadertests@outlook.com", msg.sentRepresentingName!)
        XCTAssertEqual(0x01, msg.conversationIndex!.header.reserved)
        XCTAssertEqual(0xD6, msg.conversationIndex!.header.currentFileTime.0)
        XCTAssertEqual(0xA8, msg.conversationIndex!.header.currentFileTime.1)
        XCTAssertEqual(0x6B, msg.conversationIndex!.header.currentFileTime.2)
        XCTAssertEqual(0xE5, msg.conversationIndex!.header.currentFileTime.3)
        XCTAssertEqual(0x98, msg.conversationIndex!.header.currentFileTime.4)
        XCTAssertEqual(UUID(uuidString: "A2798B5C-8801-4D52-B20D-81DCEF9FEE47"), msg.conversationIndex!.header.guid)
        XCTAssertEqual(0, msg.conversationIndex!.responseLevels.count)
        XCTAssertEqual(.windowsNetmeeting, msg.conferencingType!)
        XCTAssertEqual(.none, msg.appointmentColor!)
        XCTAssertFalse(msg.recurring!)
        XCTAssertEqual(1603353600.0, msg.clipStart!.timeIntervalSince1970)
        XCTAssertEqual("pstreadertests@outlook.com", msg.lastModifierName!)
        XCTAssertEqual("", msg.subjectPrefix!)
        XCTAssertEqual(1603368473.0, msg.messageDeliveryTime!.timeIntervalSince1970)
        XCTAssertFalse(msg.deleteAfterSubmit!)
        XCTAssertFalse(msg.appointmentSubType!)
        XCTAssertEqual("00000005\u{01}/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.internetAccountStamp!)
        XCTAssertEqual(.normal, msg.importance!)
        XCTAssertEqual(1033, msg.messageLocaleId!)
        XCTAssertEqual(30, msg.appointmentDuration!)
        XCTAssertEqual("", msg.directory!)
        XCTAssertFalse(msg.reminderSet!)
        XCTAssertEqual(0x00000400, msg.iconIndex!)
        XCTAssertTrue((msg.getProperty(set: .appointment, lid: 0x00008200) as Bool?)!)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.changeKey!.namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x20, 0x04], msg.changeKey!.localId)
        XCTAssertEqual(1603353600.0, msg.appointmentStartWhole!.timeIntervalSince1970)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.minorVersion)
        XCTAssertEqual(0x000C, msg.appointmentTimeZoneDefinitionEndDisplay!.cbHeader)
        XCTAssertEqual(0x0002, msg.appointmentTimeZoneDefinitionEndDisplay!.reserved)
        XCTAssertEqual(0x0003, msg.appointmentTimeZoneDefinitionEndDisplay!.cchKeyName)
        XCTAssertEqual("UTC", msg.appointmentTimeZoneDefinitionEndDisplay!.keyName)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.cRules)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].reserved)
        XCTAssertEqual([.effectiveTzReg], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].flags)
        XCTAssertEqual(1601, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lStandardBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMilliseconds)
        XCTAssertEqual([0xC3, 0xD9, 0x8A, 0xF4, 0x88, 0xC6, 0xB9, 0x4E, 0xB3, 0x92, 0x36, 0x6B, 0xD0, 0x2B, 0x3D, 0xEF], [UInt8]((msg.getProperty(set: .common, name: "InTransitMessageCorrelator") as Data?)!))
        XCTAssertEqual("pstreadertests@outlook.com", msg.internetAccountName!)
        XCTAssertEqual([], msg.appointmentAuxiliaryFlags)
        XCTAssertEqual("", msg.recurrencePattern!)
        XCTAssertEqual(.normal, msg.priority!)
        XCTAssertEqual("pstreadertests@outlook.com\u{00}", msg.displayTo!)
        XCTAssertFalse(msg.agingDontAgeMe!)
        XCTAssertFalse(msg.fInvited!)
        XCTAssertEqual(0x00000000, (msg.senderEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.senderEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.senderEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.senderEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.senderEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual([.read], msg.messageFlags)
        XCTAssertEqual([.unicodeOk, StoreSupportMask(rawValue: 0x00000E79)], msg.storeSupportMask)
        XCTAssertEqual(.undefined, msg.nativeBody!)
        XCTAssertEqual("Appointment Name", msg.conversationTopic!)
        XCTAssertFalse(msg.appointmentCounterProposal!)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.sentRepresentingEmailAddress!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.senderEmailAddress!)
        XCTAssertEqual(20127, msg.internetCodepage!)
        XCTAssertEqual(1613231, msg.currentVersion!)
        XCTAssertEqual(.normal, msg.sensitivity!)
        XCTAssertEqual(.notAssigned, msg.taskMode!)
        XCTAssertEqual(.busy, msg.busyStatus!)
        XCTAssertEqual([.openToDelete, .coerceToInbox, .openToCopy, .openToMove, .openForContextMenu], msg.sideEffects)
        XCTAssertEqual("EX", msg.sentRepresentingAddressType!)
        XCTAssertTrue(msg.alternateRecipientAllowed!)
        XCTAssertFalse(msg.readReceiptRequested!)
        XCTAssertEqual("", msg.displayBcc!)
        XCTAssertEqual(1603355400.0, msg.commonEnd!.timeIntervalSince1970)
        XCTAssertEqual(79870665600.0, msg.reminderSignalTime!.timeIntervalSince1970)
        XCTAssertTrue(msg.responseRequested!)
        XCTAssertEqual("", msg.netShowUrl!)
        XCTAssertEqual(0, (msg.getProperty(set: .appointment, lid: 0x00008245) as UInt32?)!)
        XCTAssertEqual(.readOnly, msg.accessLevel!)
        XCTAssertEqual(.none, msg.responseStatus!)
        XCTAssertTrue(msg.rtfInSync!)
        XCTAssertEqual(1, msg.predecessorChangeList!.values.count)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.predecessorChangeList!.values[0].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x20, 0x04], msg.predecessorChangeList!.values[0].localId)
        XCTAssertEqual(1603368498.0, msg.lastModificationTime!.timeIntervalSince1970)
        XCTAssertNil(msg.intendedBusyStatus)
        XCTAssertFalse(msg.autoFillLocation!)
        XCTAssertEqual(1603355400.0, msg.appointmentEndWhole!.timeIntervalSince1970)
        XCTAssertEqual("Appointment Name", msg.subject!)
        XCTAssertEqual([0xF7, 0x80, 0x7E, 0xE7, 0xBE, 0x6D, 0x9E, 0x49, 0x96, 0x25, 0x82, 0x77, 0x80, 0x28, 0x14, 0xC6], [UInt8](msg.searchKey!))
        XCTAssertEqual(0, msg.appointmentProposedDuration!)
        XCTAssertNotNil(msg.rtfCompressed)
        XCTAssertTrue(msg.conversationIndexTracking!)

        XCTAssertEqual(1, msg.recipients.count)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.recipients[0].searchKey!))
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].displayName!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].recipientDisplayName!)
        XCTAssertEqual(0x00000000, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].smtpAddress!)
        XCTAssertEqual(.mailUser, msg.recipients[0].objectType!)
        XCTAssertEqual([0x00, 0x00, 0x39, 0x8B], [UInt8](msg.recipients[0].instanceKey!))
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.recipients[0].emailAddress!)
        XCTAssertEqual([.sendable, .organizer], msg.recipients[0].recipientFlags)
        XCTAssertEqual(0, (msg.recipients[0].getProperty(id: .tagRecipientResourceState) as UInt32?)!)
        XCTAssertEqual([DisplayTypeEx(rawValue: 0x40000000)], msg.recipients[0].displayTypeEx)
        XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((msg.recipients[0].getProperty(id: .tagAbProviders) as Data?)!))
        XCTAssertEqual(.none, msg.recipients[0].recipientTrackStatus!)
        XCTAssertEqual(.primaryRecipient, msg.recipients[0].recipientType!)
        XCTAssertEqual(0, msg.recipients[0].rowid!)
        XCTAssertEqual(.mailUser, msg.recipients[0].displayType!)
        XCTAssertEqual("EX", msg.recipients[0].addressType!)
        XCTAssertEqual(0, msg.recipients[0].recipientOrder!)
        XCTAssertEqual(0x00000000, (msg.recipients[0].entryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.recipients[0].entryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.recipients[0].entryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.recipients[0].entryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.recipients[0].entryId as? AddressBookEntryID)!.x500DN)

        XCTAssertEqual(0, msg.attachments.count)
    }

    public func testRecurringAppointment() throws {
        let data = try getData(name: "hughbe/Recurring Appointment")
        let msg = try MsgFile(data: data)
        
        XCTAssertFalse(msg.`private`!)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionRecur!.majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionRecur!.minorVersion)
        XCTAssertEqual(0x0028, msg.appointmentTimeZoneDefinitionRecur!.cbHeader)
        XCTAssertEqual(0x0002, msg.appointmentTimeZoneDefinitionRecur!.reserved)
        XCTAssertEqual(0x0011, msg.appointmentTimeZoneDefinitionRecur!.cchKeyName)
        XCTAssertEqual("GMT Standard Time", msg.appointmentTimeZoneDefinitionRecur!.keyName)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionRecur!.cRules)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionRecur!.rules[0].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionRecur!.rules[0].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionRecur!.rules[0].reserved)
        XCTAssertEqual([.recurCurrentTzReg, .effectiveTzReg], msg.appointmentTimeZoneDefinitionRecur!.rules[0].flags)
        XCTAssertEqual(1601, msg.appointmentTimeZoneDefinitionRecur!.rules[0].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionRecur!.rules[0].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionRecur!.rules[0].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wDay)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionRecur!.rules[0].stDaylightDate.wMilliseconds)
        XCTAssertEqual("00037FFE34534C30", (msg.getProperty(id: .tagSenderSimpleDisplayName) as String?)!)
        XCTAssertEqual(30, msg.appointmentDuration!)
        XCTAssertEqual(0x00000000, (msg.senderEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.senderEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.senderEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.senderEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.senderEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual("Appointment Name", msg.conversationTopic!)
        XCTAssertFalse(msg.appointmentSubType!)
        XCTAssertEqual(1033, (msg.getProperty(set: .common, lid: 0x000085EB) as UInt32?)!)
        XCTAssertEqual(.weekly, msg.recurrenceType!)
        XCTAssertFalse(msg.smartNoAttach!)
        XCTAssertEqual("Calendar", (msg.getProperty(id: .tagParentDisplay) as String?)!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.lastModifierName!)
        XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((msg.getProperty(id: .unknown0x0E4C) as Data?)!))
        XCTAssertFalse(msg.reminderSet!)
        XCTAssertEqual("00037FFE34534C30", (msg.getProperty(id: .tagSentRepresentingSimpleDisplayName) as String?)!)
        XCTAssertEqual(1603368493.0, (msg.getProperty(set: .calendarAssistant, lid: 0x00000008) as Date?)!.timeIntervalSince1970)
        XCTAssertEqual(["IOpenTypedFacet.EventLocations"], (msg.getProperty(guid: UUID(uuidString: "E550B918-9859-47B9-8095-97E4E72F1926")!, name: "ExtensionsList") as [String]?)!)
        XCTAssertEqual(0, (msg.getProperty(set: .appointment, lid: 0x00008245) as UInt32?)!)
        XCTAssertTrue(msg.rtfInSync!)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .tagSenderName) as String?)!)
        XCTAssertNotNil(msg.rtfCompressed)
        XCTAssertEqual("MSExchangeMailboxAssistants", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000F) as String?)!)
        XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((msg.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
        XCTAssertEqual(1603368493.0, (msg.getProperty(guid: UUID(uuidString: "0B63E350-9CCC-11D0-BCDB-00805FCCCE04")!, name: "LastIndexingAttemptTime") as Date?)!.timeIntervalSince1970)
        XCTAssertEqual(.undefined, msg.nativeBody!)
        XCTAssertEqual(1603350000.0, msg.appointmentStartWhole!.timeIntervalSince1970)
        XCTAssertEqual("every Sunday and Thursday from 8:00 AM to 8:30 AM", msg.recurrencePattern!)
        XCTAssertEqual("Location", msg.eventLocation!)
        XCTAssertEqual("(UTC+00:00) Dublin, Edinburgh, Lisbon, London", msg.timeZoneDescription!)
        XCTAssertEqual(0x00000000, (msg.lastModifierEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.lastModifierEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.lastModifierEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (msg.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertFalse(msg.deleteAfterSubmit!)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.sentRepresentingEmailAddress!)
        XCTAssertEqual("", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000C) as String?)!)
        XCTAssertEqual(.normal, msg.importance!)
        XCTAssertEqual("LNXP123MB3820", (msg.getProperty(set: .calendarAssistant, lid: 0x00000010) as String?)!)
        XCTAssertEqual("LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM", (msg.getProperty(set: .calendarAssistant, lid: 0x00000012) as String?)!)
        XCTAssertEqual("", msg.netShowUrl!)
        XCTAssertEqual(1603355400.0, (msg.getProperty(set: .calendarAssistant, lid: 0x00000022) as Date?)!.timeIntervalSince1970)
        XCTAssertEqual(0, (msg.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.sentRepresentingName!)
        XCTAssertEqual(0x3004, msg.appointmentRecur!.recurrencePattern.readerVersion)
        XCTAssertEqual(0x3004, msg.appointmentRecur!.recurrencePattern.writerVersion)
        XCTAssertEqual(.weekly, msg.appointmentRecur!.recurrencePattern.recurFrequency)
        XCTAssertEqual(.week, msg.appointmentRecur!.recurrencePattern.patternType)
        XCTAssertEqual(.`default`, msg.appointmentRecur!.recurrencePattern.calendarType)
        XCTAssertEqual(0x000021C0, msg.appointmentRecur!.recurrencePattern.firstDateTime)
        XCTAssertEqual(0x00000001, msg.appointmentRecur!.recurrencePattern.period)
        XCTAssertEqual(0x00000000, msg.appointmentRecur!.recurrencePattern.slidingFlag)
        XCTAssertEqual([.x, .sa, .tu], (msg.appointmentRecur!.recurrencePattern.patternTypeSpecific as! PatternTypeSpecificWeek))
        XCTAssertEqual(49, msg.appointmentRecur!.recurrencePattern.occurrenceCount)
        XCTAssertEqual(.sunday, msg.appointmentRecur!.recurrencePattern.firstDOW)
        XCTAssertEqual(0, msg.appointmentRecur!.recurrencePattern.deletedInstanceCount)
        XCTAssertEqual(0, msg.appointmentRecur!.recurrencePattern.deletedInstanceDates.count)
        XCTAssertEqual(0, msg.appointmentRecur!.recurrencePattern.modifiedInstanceCount)
        XCTAssertEqual(0, msg.appointmentRecur!.recurrencePattern.modifiedInstanceDates.count)
        XCTAssertEqual(24892272000.0, msg.appointmentRecur!.recurrencePattern.startDate.timeIntervalSince1970)
        XCTAssertEqual(24906787200.0, msg.appointmentRecur!.recurrencePattern.endDate.timeIntervalSince1970)
        XCTAssertEqual(0x00003006, msg.appointmentRecur!.readerVersion2)
        XCTAssertEqual(0x00003009, msg.appointmentRecur!.writerVersion2)
        XCTAssertEqual(0x000001E0, msg.appointmentRecur!.startTimeOffset)
        XCTAssertEqual(0x000001FE, msg.appointmentRecur!.endTimeOffset)
        XCTAssertEqual(0, msg.appointmentRecur!.exceptionCount)
        XCTAssertEqual(0, msg.appointmentRecur!.exceptionInfo.count)
        XCTAssertEqual(0x00000000, msg.appointmentRecur!.reservedBlock1Size)
        XCTAssertEqual([], msg.appointmentRecur!.reservedBlock1)
        XCTAssertEqual(0, msg.appointmentRecur!.extendedException.count)
        XCTAssertEqual(0x00000000, msg.appointmentRecur!.reservedBlock2Size)
        XCTAssertEqual([], msg.appointmentRecur!.reservedBlock2)
        XCTAssertEqual([0xC3, 0xD9, 0x8A, 0xF4, 0x88, 0xC6, 0xB9, 0x4E, 0xB3, 0x92, 0x36, 0x6B, 0xD0, 0x2B, 0x3D, 0xEF], [UInt8]((msg.getProperty(set: .common, name: "InTransitMessageCorrelator") as Data?)!))
        XCTAssertTrue(msg.replyRequested!)
        XCTAssertFalse(msg.appointmentCounterProposal!)
        XCTAssertEqual(.normal, msg.priority!)
        XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x07, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0D, 0x00, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xB3, 0x00, 0x00], [UInt8]((msg.getProperty(set: .calendarAssistant, lid: 0x00000017) as Data?)!))
        XCTAssertEqual("", msg.displayBcc!)
        XCTAssertEqual("pstreadertests@outlook.com\u{00}", msg.displayTo!)
        XCTAssertEqual("EX", (msg.getProperty(id: .tagCreatorAddressType) as String?)!)
        XCTAssertEqual(1603324800.0, msg.clipStart!.timeIntervalSince1970)
        XCTAssertEqual("Body\r\n", msg.body!)
        XCTAssertEqual("/o=ExchangeLabs/ou=Exchange Administrative Group (FYDIBOHF23SPDLT)/cn=Configuration/cn=Servers/cn=LNXP123MB3820/cn=Microsoft System Attendant", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000A) as String?)!)
        XCTAssertEqual("16.0", msg.currentVersionName!)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .unknown0x5D0A) as String?)!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.internetAccountName!)
        XCTAssertTrue(msg.alternateRecipientAllowed!)
        XCTAssertFalse(msg.messageCcMe!)
        XCTAssertFalse((msg.getProperty(guid: UUID(uuidString: "0B63E350-9CCC-11D0-BCDB-00805FCCCE04")!, name: "IsPartiallyIndexed") as Bool?)!)
        XCTAssertEqual(0, msg.appointmentProposalNumber!)
        XCTAssertEqual("EX", msg.sentRepresentingAddressType!)
        XCTAssertEqual(1, (msg.getProperty(id: .unknown0x5037) as UInt32?)!)
        XCTAssertEqual("IPM.Appointment", msg.messageClass!)
        XCTAssertEqual(26, (msg.getProperty(id: .unknown0x0E2F) as UInt32?)!)
        XCTAssertEqual("15.20.3477.028", (msg.getProperty(set: .calendarAssistant, lid: 0x00000011) as String?)!)
        XCTAssertEqual("Version 15.20 (Build 3477.0)", (msg.getProperty(set: .calendarAssistant, lid: 0x00000013) as String?)!)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), msg.changeKey!.namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x17, 0x4F, 0x7F, 0xCD], msg.changeKey!.localId)
        XCTAssertEqual(0, msg.timeZoneStruct!.lBias)
        XCTAssertEqual(0, msg.timeZoneStruct!.lStandardBias)
        XCTAssertEqual(4294967236, msg.timeZoneStruct!.lDaylightBias)
        XCTAssertEqual(0, msg.timeZoneStruct!.wStandardYear)
        XCTAssertEqual(0, msg.timeZoneStruct!.stStandardDate.wYear)
        XCTAssertEqual(10, msg.timeZoneStruct!.stStandardDate.wMonth)
        XCTAssertEqual(0, msg.timeZoneStruct!.stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.timeZoneStruct!.stStandardDate.wDay)
        XCTAssertEqual(2, msg.timeZoneStruct!.stStandardDate.wHour)
        XCTAssertEqual(0, msg.timeZoneStruct!.stStandardDate.wMinute)
        XCTAssertEqual(0, msg.timeZoneStruct!.stStandardDate.wSecond)
        XCTAssertEqual(0, msg.timeZoneStruct!.stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.timeZoneStruct!.wDaylightYear)
        XCTAssertEqual(0, msg.timeZoneStruct!.stDaylightDate.wYear)
        XCTAssertEqual(3, msg.timeZoneStruct!.stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.timeZoneStruct!.stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.timeZoneStruct!.stDaylightDate.wDay)
        XCTAssertEqual(1, msg.timeZoneStruct!.stDaylightDate.wHour)
        XCTAssertEqual(0, msg.timeZoneStruct!.stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.timeZoneStruct!.stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.timeZoneStruct!.stDaylightDate.wMilliseconds)
        XCTAssertTrue((msg.getProperty(id: .unknown0x36FA) as Bool?)!)
        XCTAssertTrue((msg.getProperty(set: .common, name: "EntityExtractionSuccess") as Bool?)!)
        XCTAssertEqual(0x00000000, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.sentRepresentingEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.sentRepresentingEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual(2, msg.predecessorChangeList!.values.count)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), msg.predecessorChangeList!.values[0].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x17, 0x4F, 0x7F, 0xCD], msg.predecessorChangeList!.values[0].localId)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.predecessorChangeList!.values[1].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x20, 0x04], msg.predecessorChangeList!.values[1].localId)
        XCTAssertEqual("Update", (msg.getProperty(set: .calendarAssistant, lid: 0x00000006) as String?)!)
        XCTAssertNil(msg.intendedBusyStatus)
        XCTAssertEqual("{\"Locations\":[{\"Name\":\"Location\"}]}", (msg.getProperty(guid: UUID(uuidString: "E550B918-9859-47B9-8095-97E4E72F1926")!, name: "IOpenTypedFacet.EventLocations") as String?)!)
        XCTAssertFalse(msg.isRecurring!)
        XCTAssertEqual([], msg.clientIntent)
        XCTAssertEqual(1603350000.0, msg.commonStart!.timeIntervalSince1970)
        XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((msg.getProperty(id: .PR_CREATOR_SID) as Data?)!))
        XCTAssertEqual("pstreadertests@outlook.com", msg.senderEmailAddress!)
        XCTAssertEqual([.read], msg.messageFlags)
        XCTAssertTrue((msg.getProperty(set: .appointment, lid: 0x00008200) as Bool?)!)
        XCTAssertEqual([.unicodeOk, StoreSupportMask(rawValue: 0x00000E79)], msg.storeSupportMask)
        XCTAssertEqual(.none, msg.appointmentColor!)
        XCTAssertTrue(msg.messageToMe!)
        XCTAssertEqual("", msg.onlinePassword!)
        XCTAssertEqual("00037ffe-3453-4c30-0000-000000000000;/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", (msg.getProperty(set: .calendarAssistant, lid: 0x00000018) as String?)!)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .unknown0x5D0B) as String?)!)
        XCTAssertEqual([], msg.appointmentStateFlags)
        XCTAssertTrue(msg.recurring!)
        XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((msg.getProperty(id: .unknown0x0E4B) as Data?)!))
        XCTAssertEqual(1603611900.0, msg.reminderSignalTime!.timeIntervalSince1970)
        XCTAssertEqual(15, msg.reminderDelta!)
        XCTAssertEqual(0, msg.appointmentProposedDuration!)
        XCTAssertEqual(1603368634.0, msg.creationTime!.timeIntervalSince1970)
        XCTAssertEqual(1603351800.0, msg.commonEnd!.timeIntervalSince1970)
        XCTAssertEqual([], msg.appointmentAuxiliaryFlags)
        XCTAssertTrue(msg.responseRequested!)
        XCTAssertEqual(0, (msg.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.minorVersion)
        XCTAssertEqual(0x0030, msg.appointmentTimeZoneDefinitionEndDisplay!.cbHeader)
        XCTAssertEqual(0x0002, msg.appointmentTimeZoneDefinitionEndDisplay!.reserved)
        XCTAssertEqual(0x0015, msg.appointmentTimeZoneDefinitionEndDisplay!.cchKeyName)
        XCTAssertEqual("Morocco Standard Time", msg.appointmentTimeZoneDefinitionEndDisplay!.keyName)
        XCTAssertEqual(15, msg.appointmentTimeZoneDefinitionEndDisplay!.cRules)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].flags)
        XCTAssertEqual(2007, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wYear)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[0].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].flags)
        XCTAssertEqual(2008, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wYear)
        XCTAssertEqual(8, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wYear)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wMonth)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[1].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].flags)
        XCTAssertEqual(2009, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wYear)
        XCTAssertEqual(8, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wMonth)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wDayOfWeek)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wYear)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[2].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].flags)
        XCTAssertEqual(2010, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wYear)
        XCTAssertEqual(8, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wMonth)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wDayOfWeek)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wYear)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wMonth)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[3].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].flags)
        XCTAssertEqual(2011, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wYear)
        XCTAssertEqual(7, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wMonth)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wYear)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wMonth)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wDay)
        XCTAssertEqual(23, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wHour)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wMinute)
        XCTAssertEqual(59, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wSecond)
        XCTAssertEqual(999, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[4].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].flags)
        XCTAssertEqual(2012, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wYear)
        XCTAssertEqual(9, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wYear)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[5].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].flags)
        XCTAssertEqual(2013, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wYear)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[6].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].flags)
        XCTAssertEqual(2014, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[7].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].flags)
        XCTAssertEqual(2015, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[8].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].flags)
        XCTAssertEqual(2016, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[9].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].flags)
        XCTAssertEqual(2017, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[10].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].flags)
        XCTAssertEqual(2018, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wDayOfWeek)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[11].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].flags)
        XCTAssertEqual(2019, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wYear)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wMonth)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wDayOfWeek)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wDay)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wYear)
        XCTAssertEqual(6, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[12].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].reserved)
        XCTAssertEqual([.effectiveTzReg], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].flags)
        XCTAssertEqual(2020, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wYear)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wDayOfWeek)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wYear)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[13].stDaylightDate.wMilliseconds)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].reserved)
        XCTAssertEqual([], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].flags)
        XCTAssertEqual(2021, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wYear)
        XCTAssertEqual(4, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wDayOfWeek)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wDay)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wYear)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionEndDisplay!.rules[14].stDaylightDate.wMilliseconds)
        XCTAssertEqual(2047, (msg.getProperty(id: .unknown0x3663) as UInt32?)!)
        XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (msg.getProperty(id: .unknown0x4025) as String?)!)
        XCTAssertEqual(3, (msg.getProperty(set: .calendarAssistant, lid: 0x00000016) as UInt32?)!)
        XCTAssertEqual("Hugh Bellamy", (msg.getProperty(id: .tagCreatorSimpleDisplayName) as String?)!)
        XCTAssertEqual("EX", (msg.getProperty(id: .unknown0x4024) as String?)!)
        XCTAssertEqual(1603368473.0, msg.clientSubmitTime!.timeIntervalSince1970)
        XCTAssertFalse(msg.autoFillLocation!)
        XCTAssertEqual("[\r\n  {\r\n    \"@type\": \"TermFrequency\",\r\n    \"@context\": \"http://schema.microsoft.com\",\r\n    \"@source\": \"TEE,20201012.15\",\r\n    \"@outputVersion\": \"1.0\",\r\n    \"Terms\": \"{\\\"appointment\\\":1,\\\"name\\\":1}\",\r\n    \"@EntityId\": \"cc34f170-cf81-4d75-810b-d6950369542d\",\r\n    \"@correlationTrail\": \"AssetId=f0444721-81c2-409b-a971-9a048d58a045;ExtractionId=af07e5cd-b8e0-4dd8-8b3b-67e5cbe16410;EntityId=cc34f170-cf81-4d75-810b-d6950369542d\",\r\n    \"@extractionTimeUtc\": \"2020-10-22T12:08:14.6757218Z\"\r\n  }\r\n]", (msg.getProperty(set: .common, name: "EntityExtraction/SubjectTermFrequency1.0") as String?)!)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionStartDisplay!.majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionStartDisplay!.minorVersion)
        XCTAssertEqual(0x0028, msg.appointmentTimeZoneDefinitionStartDisplay!.cbHeader)
        XCTAssertEqual(0x0002, msg.appointmentTimeZoneDefinitionStartDisplay!.reserved)
        XCTAssertEqual(0x0011, msg.appointmentTimeZoneDefinitionStartDisplay!.cchKeyName)
        XCTAssertEqual("GMT Standard Time", msg.appointmentTimeZoneDefinitionStartDisplay!.keyName)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionStartDisplay!.cRules)
        XCTAssertEqual(0x02, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].majorVersion)
        XCTAssertEqual(0x01, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].minorVersion)
        XCTAssertEqual(0x003E, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].reserved)
        XCTAssertEqual([.recurCurrentTzReg, .effectiveTzReg], msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].flags)
        XCTAssertEqual(1601, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].wYear)
        XCTAssertEqual([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].x)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lStandardBias)
        XCTAssertEqual(4294967236, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].lDaylightBias)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wYear)
        XCTAssertEqual(10, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wDay)
        XCTAssertEqual(2, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stStandardDate.wMilliseconds)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wYear)
        XCTAssertEqual(3, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMonth)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wDayOfWeek)
        XCTAssertEqual(5, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wDay)
        XCTAssertEqual(1, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wHour)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMinute)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wSecond)
        XCTAssertEqual(0, msg.appointmentTimeZoneDefinitionStartDisplay!.rules[0].stDaylightDate.wMilliseconds)
        XCTAssertFalse(msg.originatorDeliveryReportRequested!)
        XCTAssertEqual(UUID(uuidString: "98E62D67-47B8-4FFE-A7E7-63F3F1D7EFBB"), (msg.getProperty(guid: UUID(uuidString: "0B63E350-9CCC-11D0-BCDB-00805FCCCE04")!, name: "BigFunnelCorrelationId") as UUID?)!)
        XCTAssertEqual("en", (msg.getProperty(guid: UUID(uuidString: "0B63E350-9CCC-11D0-BCDB-00805FCCCE04")!, name: "DetectedLanguage") as String?)!)
        XCTAssertEqual("", (msg.getProperty(set: .calendarAssistant, lid: 0x00000014) as String?)!)
        XCTAssertEqual([.openToDelete, .coerceToInbox, .openToCopy, .openToMove, .openForContextMenu], msg.sideEffects)
        XCTAssertEqual("", msg.organizerAlias!)
        XCTAssertEqual(20127, msg.internetCodepage!)
        XCTAssertEqual(["TermFrequency", "ExtractLanguage", "SubjectTermFrequency", "KeyPhraseExtraction", "TermFrequency1.0", "ExtractLanguage1.0", "SubjectTermFrequency1.0", "KeyPhraseExtraction2.0"], (msg.getProperty(set: .common, name: "EntityNames") as [String]?)!)
        XCTAssertEqual(1603350000.0, msg.reminderTime!.timeIntervalSince1970)
        XCTAssertEqual(.readOnly, msg.accessLevel!)
        XCTAssertEqual("", msg.subjectPrefix!)
        XCTAssertEqual([0xF7, 0x80, 0x7E, 0xE7, 0xBE, 0x6D, 0x9E, 0x49, 0x96, 0x25, 0x82, 0x77, 0x80, 0x28, 0x14, 0xC6], [UInt8](msg.searchKey!))
        XCTAssertEqual(1603351800.0, msg.appointmentEndWhole!.timeIntervalSince1970)
        XCTAssertEqual(.none, msg.responseStatus!)
        XCTAssertEqual("", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000D) as String?)!)
        XCTAssertFalse(msg.readReceiptRequested!)
        XCTAssertEqual(.busy, msg.busyStatus!)
        XCTAssertTrue(msg.conversationIndexTracking!)
        XCTAssertEqual("Appointment Name", msg.normalizedSubject!)
        XCTAssertEqual(0, (msg.getProperty(set: .calendarAssistant, name: "EstimatedTentativeCount") as UInt32?)!)
        XCTAssertEqual("[{\"DisplayName\":\"Location\",\"LocationAnnotation\":\"\",\"LocationUri\":\"\",\"LocationStreet\":\"\",\"LocationCity\":\"\",\"LocationState\":\"\",\"LocationCountry\":\"\",\"LocationPostalCode\":\"\",\"LocationFullAddress\":\"\"}]", (msg.getProperty(guid: UUID(uuidString: "A719E259-2A9A-4FB8-BAB3-3A9F02970E4B")!, name: "Locations") as String?)!)
        XCTAssertEqual(1603368473.0, (msg.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
        XCTAssertEqual("", msg.directory!)
        XCTAssertEqual("Client=EBA;Action=CalendarAssistant;SubstrateSearchCalendarEventItemsProcessor", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000B) as String?)!)
        XCTAssertEqual("Appointment Name", msg.subject!)
        XCTAssertFalse(msg.appointmentNotAllowPropose!)
        XCTAssertFalse(msg.agingDontAgeMe!)
        XCTAssertEqual([.read], msg.access)
        XCTAssertEqual(.normal, msg.sensitivity!)
        XCTAssertEqual(.windowsNetmeeting, msg.conferencingType!)
        XCTAssertEqual("", msg.displayCc!)
        XCTAssertEqual(1603368495.0, (msg.getProperty(set: .calendarAssistant, lid: 0x00000009) as Date?)!.timeIntervalSince1970)
        XCTAssertFalse(msg.fInvited!)
        XCTAssertEqual(0, msg.ownerAppointmentId!)
        XCTAssertEqual(29, (msg.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
        XCTAssertEqual(1603368634.0, msg.lastModificationTime!.timeIntervalSince1970)
        XCTAssertEqual("[\r\n  {\r\n    \"@outputVersion\": \"2.0\",\r\n    \"@formatter\": \"TeeKpeBondCbpBase64\",\r\n    \"@schema\": \"Microsoft.Exchange.Relevance.TeeKpeBondResponse.TeeKpe.TeeKpeResponse\",\r\n    \"keyPhrases\": \"Q0IBAAA=\",\r\n    \"@type\": \"KeyPhraseExtraction\",\r\n    \"@context\": \"http://schema.microsoft.com\",\r\n    \"@EntityId\": \"d0f674e4-feaa-4f25-86bb-58fac024634c\",\r\n    \"@correlationTrail\": \"AssetId=f0444721-81c2-409b-a971-9a048d58a045;ExtractionId=af07e5cd-b8e0-4dd8-8b3b-67e5cbe16410;EntityId=d0f674e4-feaa-4f25-86bb-58fac024634c\",\r\n    \"@extractionTimeUtc\": \"2020-10-22T12:08:14.6757218Z\"\r\n  }\r\n]", (msg.getProperty(set: .common, name: "EntityExtraction/KeyPhraseExtraction2.0") as String?)!)
        XCTAssertEqual("00000005\u{01}/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.internetAccountStamp!)
        XCTAssertEqual("", msg.collaborateDoc!)
        XCTAssertEqual("Hugh Bellamy", (msg.getProperty(id: .tagLastModifierSimpleDisplayName) as String?)!)
        XCTAssertEqual(1603368473.0, msg.validFlagStringProof!.timeIntervalSince1970)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.sentRepresentingSearchKey!))
        XCTAssertEqual(0, (msg.getProperty(id: .unknown0x365A) as UInt32?)!)
        XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0D, 0x00, 0x00], [UInt8]((msg.getProperty(set: .calendarAssistant, lid: 0x00000007) as Data?)!))
        XCTAssertEqual(1603353600.0, (msg.getProperty(set: .calendarAssistant, lid: 0x00000021) as Date?)!.timeIntervalSince1970)
        XCTAssertEqual(13, (msg.getProperty(id: .unknown0x3668) as UInt32?)!)
        XCTAssertEqual([0x76, 0x32, 0x43, 0x61, 0x6C, 0x65, 0x6E, 0x64, 0x61, 0x72, 0x4C, 0x6F, 0x67, 0x67, 0x69, 0x6E, 0x67, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x89, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x74, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x89, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x74, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xDD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x82, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x00, 0x74, 0xA7, 0x00, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x74, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xD6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x89, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x1F, 0xC8, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xA1, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x1F, 0xD0, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x3C, 0xE0, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x9F, 0x9C, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((msg.getProperty(set: .calendarAssistant, lid: 0x00000005) as Data?)!))
        XCTAssertEqual(1603353600.0, (msg.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
        XCTAssertEqual(1613231, msg.currentVersion!)
        XCTAssertFalse(msg.fExceptionalAttendees!)
        XCTAssertEqual(1617840000.0, msg.clipEnd!.timeIntervalSince1970)
        XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (msg.getProperty(id: .tagCreatorEmailAddress) as String?)!)
        XCTAssertEqual(.notAssigned, msg.taskMode!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.senderSearchKey!))
        XCTAssertEqual("EX", (msg.getProperty(id: .tagSenderAddressType) as String?)!)
        XCTAssertEqual(1033, msg.messageLocaleId!)
        XCTAssertEqual("0.0.0.0", (msg.getProperty(set: .calendarAssistant, lid: 0x0000000E) as String?)!)
        XCTAssertEqual(0, (msg.getProperty(set: .calendarAssistant, name: "EstimatedDeclineCount") as UInt32?)!)
        XCTAssertEqual("20201012.15", (msg.getProperty(set: .common, name: "TeeVersion") as String?)!)
        XCTAssertEqual(1603368473.0, msg.messageDeliveryTime!.timeIntervalSince1970)
        XCTAssertEqual(1252, msg.messageCodepage!)
        XCTAssertEqual(0, msg.appointmentSequence!)
        XCTAssertNotNil((msg.getProperty(set: .common, name: "EntityExtractionServiceDiagnosticContext") as String?))
        XCTAssertEqual(0x00000401, msg.iconIndex!)
        XCTAssertEqual(0x01, msg.conversationIndex!.header.reserved)
        XCTAssertEqual(0xD6, msg.conversationIndex!.header.currentFileTime.0)
        XCTAssertEqual(0xA8, msg.conversationIndex!.header.currentFileTime.1)
        XCTAssertEqual(0x6B, msg.conversationIndex!.header.currentFileTime.2)
        XCTAssertEqual(0xE5, msg.conversationIndex!.header.currentFileTime.3)
        XCTAssertEqual(0x98, msg.conversationIndex!.header.currentFileTime.4)
        XCTAssertEqual(UUID(uuidString: "A2798B5C-8801-4D52-B20D-81DCEF9FEE47"), msg.conversationIndex!.header.guid)
        XCTAssertEqual(0, msg.conversationIndex!.responseLevels.count)
        XCTAssertEqual("[\r\n  {\r\n    \"@type\": \"ExtractLanguage\",\r\n    \"@context\": \"http://schema.microsoft.com\",\r\n    \"@outputVersion\": \"1.0\",\r\n    \"Language\": {\r\n      \"@type\": \"Language\",\r\n      \"Locale\": \"en-US\",\r\n      \"name\": \"English (United States)\",\r\n      \"BestGuessLanguage\": \"en\"\r\n    },\r\n    \"@source\": \"Exchange\",\r\n    \"LanguageScores\": {\r\n      \"English\": 100.0\r\n    },\r\n    \"@EntityId\": \"4969f4c4-0d76-4063-bc73-f2ea8e51bb2c\",\r\n    \"@correlationTrail\": \"AssetId=f0444721-81c2-409b-a971-9a048d58a045;ExtractionId=af07e5cd-b8e0-4dd8-8b3b-67e5cbe16410;EntityId=4969f4c4-0d76-4063-bc73-f2ea8e51bb2c\",\r\n    \"@extractionTimeUtc\": \"2020-10-22T12:08:14.6757218Z\"\r\n  }\r\n]", (msg.getProperty(set: .common, name: "EntityExtraction/ExtractLanguage1.0") as String?)!)
        XCTAssertEqual(0, (msg.getProperty(set: .calendarAssistant, name: "EstimatedAcceptCount") as UInt32?)!)
        XCTAssertEqual("[\r\n  {\r\n    \"@type\": \"TermFrequency\",\r\n    \"@context\": \"http://schema.microsoft.com\",\r\n    \"@source\": \"TEE,20201012.15\",\r\n    \"@outputVersion\": \"1.0\",\r\n    \"Terms\": \"{\\\"body\\\":1}\",\r\n    \"@EntityId\": \"5c027a95-2cd6-4321-95f6-3e6561aca076\",\r\n    \"@correlationTrail\": \"AssetId=f0444721-81c2-409b-a971-9a048d58a045;ExtractionId=af07e5cd-b8e0-4dd8-8b3b-67e5cbe16410;EntityId=5c027a95-2cd6-4321-95f6-3e6561aca076\",\r\n    \"@extractionTimeUtc\": \"2020-10-22T12:08:14.6757218Z\"\r\n  }\r\n]", (msg.getProperty(set: .common, name: "EntityExtraction/TermFrequency1.0") as String?)!)

        XCTAssertEqual(1, msg.recipients.count)
        XCTAssertEqual([DisplayTypeEx(rawValue: 0x40000000)], msg.recipients[0].displayTypeEx)
        XCTAssertEqual(.none, msg.recipients[0].recipientTrackStatus!)
        XCTAssertEqual([.sendable, .organizer], msg.recipients[0].recipientFlags)
        XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((msg.recipients[0].getProperty(id: .tagAbProviders) as Data?)!))
        XCTAssertEqual("EX", msg.recipients[0].addressType!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].displayName!)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.recipients[0].emailAddress!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].smtpAddress!)
        XCTAssertEqual([0x00, 0x00, 0x39, 0x8B], [UInt8](msg.recipients[0].instanceKey!))
        XCTAssertEqual(.mailUser, msg.recipients[0].displayType!)
        XCTAssertEqual(.primaryRecipient, msg.recipients[0].recipientType!)
        XCTAssertEqual(.mailUser, msg.recipients[0].objectType!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.recipients[0].recipientDisplayName!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.recipients[0].searchKey!))
        XCTAssertEqual(0, msg.recipients[0].rowid!)
        XCTAssertEqual(0x00000000, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.recipients[0].recipientEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual(0x00000000, (msg.recipients[0].entryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.recipients[0].entryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.recipients[0].entryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.recipients[0].entryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.recipients[0].entryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual(0, msg.recipients[0].recipientOrder!)
        XCTAssertEqual(0, (msg.recipients[0].getProperty(id: .tagRecipientResourceState) as UInt32?)!)

        XCTAssertEqual(0, msg.attachments.count)
    }

    
    static var allTests = [
        ("testRecurringAppointment", testRecurringAppointment)
    ]
}
