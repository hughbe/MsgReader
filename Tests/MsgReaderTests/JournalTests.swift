import XCTest
import CompressedRtf
import MAPI
@testable import MsgReader

final class JournalTests: XCTestCase {
    public func testSimpleJournalEntry() throws {
        /* hughbe */
        let data = try getData(name: "Journal Entry")
        let msg = try MsgFile(data: data)

        XCTAssertEqual("Journal Entry", msg.subject!)
        XCTAssertEqual(.normal, msg.importance!)
        XCTAssertEqual("hughbellars@gmail.com", msg.sentRepresentingName!)
        XCTAssertFalse(msg.agingDontAgeMe!)
        XCTAssertTrue(msg.recipientReassignmentProhibited!)
        XCTAssertEqual("00000002\u{01}hughbellars@gmail.com", msg.internetAccountStamp!)
        XCTAssertEqual("hughbellars@gmail.com", msg.internetAccountName!)
        XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x48, 0x55, 0x47, 0x48, 0x42, 0x45, 0x4C, 0x4C, 0x41, 0x52, 0x53, 0x40, 0x47, 0x4D, 0x41, 0x49, 0x4C, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](msg.sentRepresentingSearchKey!))
        XCTAssertFalse(msg.logDocumentRouted!)
        XCTAssertEqual("hughbellars@gmail.com", msg.senderEmailAddress!)
        XCTAssertEqual(.notAssigned, msg.taskMode!)
        XCTAssertEqual(0, msg.reminderDelta!)
        XCTAssertEqual("Phone call", msg.logTypeDesc!)
        XCTAssertEqual(1599559740.0, msg.commonEnd!.timeIntervalSince1970)
        XCTAssertEqual([.unicodeOk, StoreSupportMask(rawValue: 0x00000E79)], msg.storeSupportMask)
        XCTAssertEqual(.undefined, msg.nativeBody!)
        XCTAssertEqual(28591, msg.internetCodepage!)
        XCTAssertFalse(msg.readReceiptRequested!)
        XCTAssertEqual("Body\r\n", msg.body!)
        XCTAssertEqual("hughbellars@gmail.com", msg.lastModifierName!)
        XCTAssertTrue(msg.rtfInSync!)
        XCTAssertEqual(0x00000000, (msg.senderEntryId as? OneOffEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), (msg.senderEntryId as? OneOffEntryID)!.providerUid)
        XCTAssertEqual(0x0000, (msg.senderEntryId as? OneOffEntryID)!.version)
        XCTAssertEqual([.unicode], (msg.senderEntryId as? OneOffEntryID)!.entryFlags)
        XCTAssertEqual("hughbellars@gmail.com", (msg.senderEntryId as? OneOffEntryID)!.displayName)
        XCTAssertEqual("SMTP", (msg.senderEntryId as? OneOffEntryID)!.addressType)
        XCTAssertEqual("hughbellars@gmail.com", (msg.senderEntryId as? OneOffEntryID)!.emailAddress)
        XCTAssertFalse(msg.originatorDeliveryReportRequested!)
        XCTAssertFalse(msg.deleteAfterSubmit!)
        XCTAssertEqual(0x0000060A, msg.iconIndex!)
        XCTAssertEqual(1599559195.0, msg.lastModificationTime!.timeIntervalSince1970)
        XCTAssertEqual("hughbellars@gmail.com", (msg.getProperty(id: .tagSenderName) as String?)!)
        XCTAssertEqual(1599559173.0, msg.messageDeliveryTime!.timeIntervalSince1970)
        XCTAssertEqual(10, msg.logDuration!)
        XCTAssertEqual(.normal, msg.priority!)
        XCTAssertEqual([.read], msg.messageFlags)
        XCTAssertEqual(.`private`, msg.sensitivity!)
        XCTAssertFalse(msg.logDocumentPosted!)
        XCTAssertFalse(msg.alternateRecipientAllowed!)
        XCTAssertEqual("Journal Entry", msg.conversationTopic!)
        XCTAssertEqual("", msg.displayCc!)
        XCTAssertEqual(1599559173.0, msg.clientSubmitTime!.timeIntervalSince1970)
        XCTAssertEqual(1033, (msg.getProperty(set: .common, lid: 0x000085EB) as UInt32?)!)
        XCTAssertEqual(.readOnly, msg.accessLevel!)
        XCTAssertEqual([0xDA, 0xD0, 0x3B, 0x28, 0x7D, 0xDC, 0xC9, 0x48, 0xBA, 0x0C, 0x22, 0x4F, 0xF5, 0x78, 0x1C, 0x43], [UInt8]((msg.getProperty(set: .common, name: "InTransitMessageCorrelator") as Data?)!))
        XCTAssertEqual("Phone Call", msg.logType!)
        XCTAssertEqual("16.0", msg.currentVersionName!)
        XCTAssertEqual(1613029, msg.currentVersion!)
        XCTAssertEqual("Journal Entry", msg.normalizedSubject!)
        XCTAssertEqual(1599559140.0, msg.logStart!.timeIntervalSince1970)
        XCTAssertEqual(1599559173.0, msg.validFlagStringProof!.timeIntervalSince1970)
        XCTAssertEqual(1, msg.predecessorChangeList!.values.count)
        XCTAssertEqual(UUID(uuidString: "504346B0-3346-4246-AC66-333EA06D2732"), msg.predecessorChangeList!.values[0].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x98, 0xDF], msg.predecessorChangeList!.values[0].localId)
        XCTAssertFalse(msg.logDocumentSaved!)
        XCTAssertEqual("SMTP", msg.sentRepresentingAddressType!)
        XCTAssertEqual("hughbellars@gmail.com", msg.sentRepresentingEmailAddress!)
        XCTAssertEqual("", msg.displayBcc!)
        XCTAssertEqual(["Company"], msg.companies!)
        XCTAssertEqual("", msg.displayTo!)
        XCTAssertNotNil(msg.rtfCompressed)
        XCTAssertEqual(1599559140.0, msg.commonStart!.timeIntervalSince1970)
        XCTAssertEqual(1599559740.0, msg.logEnd!.timeIntervalSince1970)
        XCTAssertEqual(1033, msg.messageLocaleId!)
        XCTAssertEqual("IPM.Activity", msg.messageClass!)
        XCTAssertEqual("", msg.subjectPrefix!)
        XCTAssertEqual([.read], msg.access)
        XCTAssertTrue(msg.`private`!)
        XCTAssertEqual(1599559195.0, msg.creationTime!.timeIntervalSince1970)
        XCTAssertEqual(UUID(uuidString: "504346B0-3346-4246-AC66-333EA06D2732"), msg.changeKey!.namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x98, 0xDF], msg.changeKey!.localId)
        XCTAssertEqual(0x00000000, (msg.sentRepresentingEntryId as? OneOffEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), (msg.sentRepresentingEntryId as? OneOffEntryID)!.providerUid)
        XCTAssertEqual(0x0000, (msg.sentRepresentingEntryId as? OneOffEntryID)!.version)
        XCTAssertEqual([.unicode], (msg.sentRepresentingEntryId as? OneOffEntryID)!.entryFlags)
        XCTAssertEqual("hughbellars@gmail.com", (msg.sentRepresentingEntryId as? OneOffEntryID)!.displayName)
        XCTAssertEqual("SMTP", (msg.sentRepresentingEntryId as? OneOffEntryID)!.addressType)
        XCTAssertEqual("hughbellars@gmail.com", (msg.sentRepresentingEntryId as? OneOffEntryID)!.emailAddress)
        XCTAssertEqual(.noAssociatedAttachment, msg.logFlags!)
        XCTAssertEqual([0x22, 0x1B, 0x46, 0x2F, 0xBA, 0xDC, 0x73, 0x46, 0xB6, 0xA5, 0xDF, 0x65, 0xA2, 0xF3, 0x8D, 0x6D], [UInt8](msg.searchKey!))
        XCTAssertFalse(msg.logDocumentPrinted!)
        XCTAssertEqual(0x01, msg.conversationIndex!.header.reserved)
        XCTAssertEqual(1292710568480.0, msg.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
        XCTAssertEqual(UUID(uuidString: "28B6E514-F981-40D9-88A9-9DFEAC93A40D"), msg.conversationIndex!.header.guid)
        XCTAssertEqual(0, msg.conversationIndex!.responseLevels.count)
        XCTAssertEqual("SMTP", (msg.getProperty(id: .tagSenderAddressType) as String?)!)
        XCTAssertEqual([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x48, 0x55, 0x47, 0x48, 0x42, 0x45, 0x4C, 0x4C, 0x41, 0x52, 0x53, 0x40, 0x47, 0x4D, 0x41, 0x49, 0x4C, 0x2E, 0x43, 0x4F, 0x4D, 0x00], [UInt8](msg.senderSearchKey!))
        XCTAssertEqual([.coerceToInbox], msg.sideEffects)

        XCTAssertEqual(0, msg.recipients.count)
        XCTAssertEqual(0, msg.attachments.count)
    }

    static var allTests = [
        ("testSimpleJournalEntry", testSimpleJournalEntry)
    ]
}
