import XCTest
import CompressedRtf
import MAPI
@testable import MsgReader

final class ContactTests: XCTestCase {
    public func testSimpleContact() throws {
        let data = try getData(name: "hughbe/Sample Contact")
        let msg = try MsgFile(data: data)
        
        XCTAssertEqual("webaddress", msg.businessWebPageUrl!)
        XCTAssertTrue(msg.alternateRecipientAllowed!)
        XCTAssertEqual("Department", msg.departmentName!)
        XCTAssertEqual("ISDN", msg.isdnNumber!)
        XCTAssertEqual(1613231, msg.currentVersion!)
        XCTAssertEqual("", msg.subjectPrefix!)
        XCTAssertFalse(msg.`private`!)
        XCTAssertEqual("", msg.email1AddressType!)
        XCTAssertEqual("Email", msg.email1OriginalDisplayName!)
        XCTAssertEqual(0x00000200, msg.iconIndex!)
        XCTAssertEqual("CALLBACK", msg.callbackTelephoneNumber!)
        XCTAssertEqual("", msg.department!)
        XCTAssertEqual([.unicodeOk, StoreSupportMask(rawValue: 0x00000E79)], msg.storeSupportMask)
        XCTAssertEqual("pstreadertests@outlook.com", msg.internetAccountName!)
        XCTAssertTrue(msg.conversationIndexTracking!)
        XCTAssertFalse(msg.autoLog!)
        XCTAssertEqual("", msg.workAddressPostalCode!)
        XCTAssertEqual("", msg.postalAddress!)
        XCTAssertEqual("First Middle Last I", msg.subject!)
        XCTAssertEqual([0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x07, 0x05, 0x05, 0x06, 0x05, 0x04, 0x07, 0x06, 0x05, 0x06, 0x08, 0x07, 0x07, 0x08, 0x0A, 0x11, 0x0B, 0x0A, 0x09, 0x09, 0x0A, 0x15, 0x0F, 0x10, 0x0C, 0x11, 0x18, 0x15, 0x1A, 0x19, 0x18, 0x15, 0x18, 0x17, 0x1B, 0x1E, 0x27, 0x21, 0x1B, 0x1D, 0x25, 0x1D, 0x17, 0x18, 0x22, 0x2E, 0x22, 0x25, 0x28, 0x29, 0x2B, 0x2C, 0x2B, 0x1A, 0x20, 0x2F, 0x33, 0x2F, 0x2A, 0x32, 0x27, 0x2A, 0x2B, 0x2A, 0xFF, 0xDB, 0x00, 0x43, 0x01, 0x07, 0x08, 0x08, 0x0A, 0x09, 0x0A, 0x14, 0x0B, 0x0B, 0x14, 0x2A, 0x1C, 0x18, 0x1C, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x3F, 0x00, 0x11, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xC4, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x10, 0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03, 0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7D, 0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xA1, 0x08, 0x23, 0x42, 0xB1, 0xC1, 0x15, 0x52, 0xD1, 0xF0, 0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0A, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xC4, 0x00, 0x1F, 0x01, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x11, 0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04, 0x07, 0x05, 0x04, 0x04, 0x00, 0x01, 0x02, 0x77, 0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71, 0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xA1, 0xB1, 0xC1, 0x09, 0x23, 0x33, 0x52, 0xF0, 0x15, 0x62, 0x72, 0xD1, 0x0A, 0x16, 0x24, 0x34, 0xE1, 0x25, 0xF1, 0x17, 0x18, 0x19, 0x1A, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xDA, 0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xF7, 0xB3, 0x29, 0x04, 0x91, 0xF8, 0x53, 0x77, 0x37, 0x96, 0xCC, 0x79, 0x27, 0x81, 0x4D, 0x3E, 0x94, 0xF6, 0x18, 0x54, 0x5F, 0xC4, 0xD0, 0x04, 0x7E, 0x55, 0x14, 0x9E, 0x61, 0xA2, 0x80, 0x1E, 0xA3, 0x2C, 0x29, 0x65, 0x6F, 0x99, 0x8F, 0xA0, 0xC0, 0xA7, 0x46, 0x30, 0x72, 0x69, 0x8D, 0x85, 0x5E, 0x7E, 0x62, 0x4E, 0x78, 0xA0, 0x08, 0x68, 0xA9, 0x37, 0x7F, 0xB2, 0x94, 0x50, 0x04, 0xA7, 0xFD, 0x4F, 0x3D, 0x4F, 0xAD, 0x47, 0x26, 0x01, 0x03, 0xD0, 0x54, 0xB2, 0x7F, 0xAC, 0x55, 0x1C, 0xE2, 0xA0, 0x73, 0x92, 0x7E, 0xB4, 0x00, 0x99, 0x1F, 0xDD, 0x14, 0x53, 0x68, 0xA0, 0x0B, 0x0D, 0xF7, 0x99, 0xAA, 0x13, 0xD2, 0xA5, 0xC9, 0x08, 0x3D, 0xE9, 0x85, 0x8F, 0x7C, 0x1F, 0xA8, 0xA0, 0x08, 0xE8, 0xA7, 0x6E, 0xF6, 0x14, 0x50, 0x07, 0xFF, 0xD9], [UInt8](msg.businessCardCardPicture!))
        XCTAssertEqual("F.M.L.", msg.initials!)
        XCTAssertEqual("", msg.displayBcc!)
        XCTAssertEqual("", msg.workAddressStreet!)
        XCTAssertEqual(.normal, msg.sensitivity!)
        XCTAssertEqual(.notAssigned, msg.taskMode!)
        XCTAssertEqual("Mr.", msg.displayNamePrefix!)
        XCTAssertFalse(msg.readReceiptRequested!)
        XCTAssertEqual("Mr. First Middle Last I", msg.displayName!)
        XCTAssertEqual([0x62, 0x1B, 0x1E, 0x6C, 0x01, 0xF2, 0xC7, 0x42, 0xB4, 0xC1, 0xC3, 0x55, 0xAA, 0x2C, 0x65, 0x6E], [UInt8](msg.searchKey!))
        XCTAssertEqual("", msg.country!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.senderSearchKey!))
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), msg.changeKey!.namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x17, 0x4F, 0x7F, 0xB3], msg.changeKey!.localId)
        XCTAssertEqual("", msg.locality!)
        XCTAssertEqual("", msg.keyword!)
        XCTAssertEqual("State", msg.otherAddressStateOrProvince!)
        XCTAssertEqual("Street\r\nCity, State  ZIP", msg.otherAddress!)
        XCTAssertEqual([0x00000003, 0x00008080, 0x00003A2C, 0x00003A2D, 0x00003A02, 0x00003A1C], msg.contactItemData!)
        XCTAssertEqual("First", msg.givenName!)
        XCTAssertEqual("United States of America", msg.otherAddressCountry!)
        XCTAssertFalse(msg.deleteAfterSubmit!)
        XCTAssertEqual(.workAddressIsMailingAddress, msg.postalAddressId!)
        XCTAssertEqual(1601556916.0, msg.validFlagStringProof!.timeIntervalSince1970)
        XCTAssertEqual(0x01, msg.conversationIndex!.header.reserved)
        XCTAssertEqual(28465710584.0, msg.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
        XCTAssertEqual(UUID(uuidString: "3C8DC689-12D3-491A-A216-D9520DDDDEE0"), msg.conversationIndex!.header.guid)
        XCTAssertEqual(0, msg.conversationIndex!.responseLevels.count)
        XCTAssertEqual("IPM.Contact", msg.messageClass!)
        XCTAssertEqual(.normal, msg.importance!)
        XCTAssertEqual([.read], msg.access)
        XCTAssertEqual("", msg.displayTo!)
        XCTAssertEqual("", msg.account!)
        XCTAssertEqual(0, msg.reminderDelta!)
        XCTAssertEqual(1603367867.0, msg.lastModificationTime!.timeIntervalSince1970)
        XCTAssertEqual("First Middle Last I", msg.normalizedSubject!)
        XCTAssertEqual("FAX", msg.fax3AddressType!)
        XCTAssertFalse(msg.reminderSet!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.senderEmailAddress!)
        XCTAssertEqual("DisplayAs", msg.email1DisplayName!)
        XCTAssertEqual("", msg.postalCode!)
        XCTAssertEqual("FAX", msg.fax1AddressType!)
        XCTAssertEqual("I", msg.generation!)
        XCTAssertEqual("Middle", msg.middleName!)
        XCTAssertTrue(msg.rtfInSync!)
        XCTAssertEqual("Street", msg.otherAddressStreet!)
        XCTAssertEqual("", msg.workAddressCity!)
        XCTAssertFalse(msg.originatorDeliveryReportRequested!)
        XCTAssertEqual([0x00008017, 0x00008037, 0x00003A16, 0x00008019, 0x00008018], msg.fileUnderList!)
        XCTAssertEqual("imaddress", msg.instantMessagingAddress!)
        XCTAssertEqual("", msg.displayCc!)
        XCTAssertEqual([.read], msg.messageFlags)
        XCTAssertEqual("\r\n", msg.body!)
        XCTAssertEqual(256, msg.contactCharacterSet!)
        XCTAssertEqual("", msg.addressCountryCode!)
        XCTAssertEqual("EX", (msg.getProperty(id: .tagSenderAddressType) as String?)!)
        XCTAssertEqual("", msg.language!)
        XCTAssertEqual(1033, msg.messageLocaleId!)
        XCTAssertEqual("Last", msg.surname!)
        XCTAssertEqual("16.0", msg.currentVersionName!)
        XCTAssertEqual("", msg.streetAddress!)
        XCTAssertEqual("", msg.fax1EmailAddress!)
        XCTAssertEqual("", msg.workAddressState!)
        XCTAssertEqual(.undefined, msg.nativeBody!)
        XCTAssertEqual("Company", msg.companyName!)
        XCTAssertEqual("US", msg.otherAddressCountryCode!)
        XCTAssertEqual("City", msg.otherAddressCity!)
        XCTAssertNotNil(msg.rtfCompressed)
        XCTAssertEqual("", msg.stateOrProvince!)
        XCTAssertEqual("TELEX", msg.telexNumber!)
        XCTAssertEqual("", msg.fax1OriginalDisplayName!)
        XCTAssertEqual(1603367867.0, msg.creationTime!.timeIntervalSince1970)
        XCTAssertEqual(0x00000000, (msg.senderEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.senderEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.senderEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.senderEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.senderEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual("webaddress", msg.businessHomePage!)
        XCTAssertEqual("", msg.workAddressCountry!)
        XCTAssertEqual("", msg.fax2EmailAddress!)
        XCTAssertEqual("", msg.location!)
        XCTAssertEqual("", msg.email1EmailAddress!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.lastModifierName!)
        XCTAssertEqual([], msg.addressBookProviderArrayType)
        XCTAssertEqual("", msg.fax3EmailAddress!)
        XCTAssertEqual([0x00008080, 0x00008090, 0x000080A0], (msg.getProperty(set: .address, lid: 0x00008027) as [UInt32]?)!)
        XCTAssertEqual("FAX", msg.fax2AddressType!)
        XCTAssertEqual("ZIP", msg.otherAddressPostalCode!)
        XCTAssertEqual([0x17, 0x9B, 0xAA, 0xFB, 0x28, 0x7A, 0xEC, 0x4A, 0xBB, 0x65, 0x04, 0x1E, 0x3B, 0x93, 0x34, 0x5E], [UInt8]((msg.getProperty(set: .common, name: "InTransitMessageCorrelator") as Data?)!))
        XCTAssertEqual(2, msg.predecessorChangeList!.values.count)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), msg.predecessorChangeList!.values[0].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x17, 0x4F, 0x7F, 0xB3], msg.predecessorChangeList!.values[0].localId)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.predecessorChangeList!.values[1].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x08, 0x0E], msg.predecessorChangeList!.values[1].localId)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .tagSenderName) as String?)!)
        XCTAssertEqual([.openToDelete, .coerceToInbox, .openToMove], msg.sideEffects)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.sentRepresentingEmailAddress!)
        XCTAssertEqual("", (msg.getProperty(set: .address, lid: 0x0000800E) as String?)!)
        XCTAssertEqual("", msg.fax3OriginalDisplayName!)
        XCTAssertEqual(.normal, msg.priority!)
        XCTAssertEqual("FileAs", msg.fileUnder!)
        XCTAssertEqual("Person", msg.conversationTopic!)
        XCTAssertEqual(1601556916.0, msg.clientSubmitTime!.timeIntervalSince1970)
        XCTAssertEqual("", msg.workAddress!)
        XCTAssertEqual(28591, msg.internetCodepage!)
        XCTAssertFalse((msg.getProperty(set: .address, lid: 0x00008063) as Bool?)!)
        XCTAssertEqual(.readOnly, msg.accessLevel!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.sentRepresentingSearchKey!))
        XCTAssertEqual(0x00000000, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.sentRepresentingEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.sentRepresentingEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual(0x03, msg.businessCardDisplayDefinition!.majorVersion)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.minorVersion)
        XCTAssertEqual(.imageTopAligned, msg.businessCardDisplayDefinition!.templateID)
        XCTAssertEqual(16, msg.businessCardDisplayDefinition!.countOfFields)
        XCTAssertEqual(0x10, msg.businessCardDisplayDefinition!.fieldInfoSize)
        XCTAssertEqual(0x0C, msg.businessCardDisplayDefinition!.extraInfoSize)
        XCTAssertEqual(.middleCenter, msg.businessCardDisplayDefinition!.imageAlignment)
        XCTAssertEqual(0x01, msg.businessCardDisplayDefinition!.imageSource)
        XCTAssertEqual(0x0040FF00, msg.businessCardDisplayDefinition!.backgroundColor)
        XCTAssertEqual(0x2B, msg.businessCardDisplayDefinition!.imageArea)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.reserved)
        XCTAssertEqual(16, msg.businessCardDisplayDefinition!.fieldInfoN.count)
        XCTAssertEqual(0x3001, msg.businessCardDisplayDefinition!.fieldInfoN[0].textPropertyID)
        XCTAssertEqual([.centerAlign], msg.businessCardDisplayDefinition!.fieldInfoN[0].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[0].labelFormat)
        XCTAssertEqual(0x0A, msg.businessCardDisplayDefinition!.fieldInfoN[0].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[0].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[0].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[0].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[0].labelFontColor)
        XCTAssertEqual(0x3A16, msg.businessCardDisplayDefinition!.fieldInfoN[1].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[1].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[1].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[1].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[1].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[1].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[1].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[1].labelFontColor)
        XCTAssertEqual(0x3A17, msg.businessCardDisplayDefinition!.fieldInfoN[2].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[2].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[2].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[2].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[2].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[2].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[2].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[2].labelFontColor)
        XCTAssertEqual(0x3A18, msg.businessCardDisplayDefinition!.fieldInfoN[3].textPropertyID)
        XCTAssertEqual([.centerAlign, .rightAlign, .underline, .underline], msg.businessCardDisplayDefinition!.fieldInfoN[3].textFormat)
        XCTAssertEqual([FieldInfo.LabelFormat(rawValue: 0x01)], msg.businessCardDisplayDefinition!.fieldInfoN[3].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[3].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[3].reserved)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[3].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[3].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[3].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[4].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[4].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[4].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[4].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[4].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[4].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[4].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[4].labelFontColor)
        XCTAssertEqual(0x3A08, msg.businessCardDisplayDefinition!.fieldInfoN[5].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[5].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[5].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[5].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[5].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[5].labelOffset)
        XCTAssertEqual(0x00D48D2A, msg.businessCardDisplayDefinition!.fieldInfoN[5].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[5].labelFontColor)
        XCTAssertEqual(0x8084, msg.businessCardDisplayDefinition!.fieldInfoN[6].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[6].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[6].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[6].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[6].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[6].labelOffset)
        XCTAssertEqual(0x00D48D2A, msg.businessCardDisplayDefinition!.fieldInfoN[6].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[6].labelFontColor)
        XCTAssertEqual(0x801B, msg.businessCardDisplayDefinition!.fieldInfoN[7].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[7].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[7].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[7].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[7].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[7].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[7].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[7].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[8].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[8].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[8].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[8].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[8].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[8].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[8].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[8].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[9].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[9].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[9].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[9].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[9].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[9].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[9].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[9].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[10].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[10].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[10].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[10].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[10].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[10].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[10].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[10].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[11].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[11].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[11].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[11].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[11].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[11].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[11].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[11].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[12].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[12].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[12].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[12].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[12].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[12].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[12].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[12].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[13].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[13].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[13].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[13].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[13].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[13].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[13].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[13].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[14].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[14].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[14].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[14].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[14].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[14].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[14].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[14].labelFontColor)
        XCTAssertEqual(0x0000, msg.businessCardDisplayDefinition!.fieldInfoN[15].textPropertyID)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[15].textFormat)
        XCTAssertEqual([], msg.businessCardDisplayDefinition!.fieldInfoN[15].labelFormat)
        XCTAssertEqual(0x08, msg.businessCardDisplayDefinition!.fieldInfoN[15].fontSize)
        XCTAssertEqual(0x00, msg.businessCardDisplayDefinition!.fieldInfoN[15].reserved)
        XCTAssertEqual(0xFFFE, msg.businessCardDisplayDefinition!.fieldInfoN[15].labelOffset)
        XCTAssertEqual(0x00000000, msg.businessCardDisplayDefinition!.fieldInfoN[15].valueFontColor)
        XCTAssertEqual(0x00626262, msg.businessCardDisplayDefinition!.fieldInfoN[15].labelFontColor)
        XCTAssertEqual(1, msg.businessCardDisplayDefinition!.extraInfo.count)
        XCTAssertEqual("Label", msg.businessCardDisplayDefinition!.extraInfo[0])
        XCTAssertFalse(msg.agingDontAgeMe!)
        XCTAssertEqual("00000005\u{01}/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.internetAccountStamp!)
        XCTAssertEqual("Title", msg.title!)
        XCTAssertEqual("", msg.workAddressCountryCode!)
        XCTAssertEqual(1601556916.0, msg.messageDeliveryTime!.timeIntervalSince1970)
        XCTAssertEqual("pstreadertests@outlook.com", msg.sentRepresentingName!)
        XCTAssertEqual("EX", msg.sentRepresentingAddressType!)
        XCTAssertEqual("", msg.fax2OriginalDisplayName!)
        XCTAssertEqual(4294967295, msg.fileUnderId!)
        XCTAssertFalse(msg.recipientReassignmentProhibited!)
        XCTAssertEqual("", msg.businessTelephoneNumber!)

        XCTAssertEqual(0, msg.recipients.count)
        XCTAssertEqual(0, msg.attachments.count)
    }

    public func testContactGroup() throws {
        let data = try getData(name: "hughbe/Contact Group")
        let msg = try MsgFile(data: data)
        
        XCTAssertEqual("", (msg.getProperty(set: .address, lid: 0x0000800E) as String?)!)
        XCTAssertEqual([.read], msg.access)
        XCTAssertEqual("Contact Group", msg.distributionListName!)
        XCTAssertEqual(1033, msg.messageLocaleId!)
        XCTAssertEqual(.undefined, msg.nativeBody!)
        XCTAssertEqual("Contact Group", msg.fileUnder!)
        XCTAssertEqual("", msg.displayTo!)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.sentRepresentingEmailAddress!)
        XCTAssertEqual("", msg.department!)
        XCTAssertEqual([.read], msg.messageFlags)
        XCTAssertEqual([0x6E, 0x37, 0x4D, 0x63, 0x80, 0xC4, 0xC9, 0x43, 0x93, 0xD6, 0x0F, 0x98, 0x26, 0xD6, 0xC2, 0xD2], [UInt8]((msg.getProperty(set: .common, name: "InTransitMessageCorrelator") as Data?)!))
        XCTAssertFalse(msg.autoLog!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.lastModifierName!)
        XCTAssertEqual(0x01, msg.conversationIndex!.header.reserved)
        XCTAssertEqual(7664709805.0, msg.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
        XCTAssertEqual(UUID(uuidString: "EEBD77F1-C9A1-4274-AD40-6A6AE6AA82F6"), msg.conversationIndex!.header.guid)
        XCTAssertEqual(0, msg.conversationIndex!.responseLevels.count)
        XCTAssertEqual("Contact Group", msg.conversationTopic!)
        XCTAssertEqual(1603899089.0, msg.lastModificationTime!.timeIntervalSince1970)
        XCTAssertEqual("Contact Group", msg.normalizedSubject!)
        XCTAssertEqual(1603899089.0, msg.creationTime!.timeIntervalSince1970)
        XCTAssertEqual(2, msg.predecessorChangeList!.values.count)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), msg.predecessorChangeList!.values[0].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x17, 0x4F, 0xD5, 0xBF], msg.predecessorChangeList!.values[0].localId)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.predecessorChangeList!.values[1].namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x30, 0x0A], msg.predecessorChangeList!.values[1].localId)
        XCTAssertEqual("", msg.addressCountryCode!)
        XCTAssertEqual([.entryIdUnique, .modifyOk, .createOk, .attachOk, .oleOk, .mvPropsOk, .categorizeOk, .rtfOk, .unicodeOk], msg.storeSupportMask)
        XCTAssertFalse(msg.readReceiptRequested!)
        XCTAssertFalse(msg.deleteAfterSubmit!)
        XCTAssertTrue(msg.rtfInSync!)
        XCTAssertEqual("IPM.DistList", msg.messageClass!)
        XCTAssertTrue(msg.conversationIndexTracking!)
        XCTAssertEqual("", msg.language!)
        XCTAssertEqual(0x00000000, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.sentRepresentingEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.sentRepresentingEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.sentRepresentingEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual(.normal, msg.priority!)
        XCTAssertEqual(4294967295, msg.fileUnderId!)
        XCTAssertEqual(3625595719, msg.distributionListChecksum!)
        XCTAssertEqual("", msg.displayCc!)
        XCTAssertEqual("", msg.subjectPrefix!)
        XCTAssertEqual("pstreadertests@outlook.com", (msg.getProperty(id: .tagSenderName) as String?)!)
        XCTAssertFalse(msg.reminderSet!)
        XCTAssertEqual("", msg.displayNamePrefix!)
        XCTAssertEqual(.normal, msg.sensitivity!)
        XCTAssertEqual(0x00000202, msg.iconIndex!)
        XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), msg.changeKey!.namespaceGuid)
        XCTAssertEqual([0x00, 0x00, 0x30, 0x0A], msg.changeKey!.localId)
        XCTAssertEqual("EX", msg.sentRepresentingAddressType!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.sentRepresentingSearchKey!))
        XCTAssertEqual("Contact Group", msg.subject!)
        XCTAssertEqual("", msg.keyword!)
        XCTAssertEqual("", msg.country!)
        XCTAssertFalse(msg.originatorDeliveryReportRequested!)
        XCTAssertEqual(1613231, msg.currentVersion!)
        XCTAssertEqual([0x45, 0x58, 0x3A, 0x2F, 0x4F, 0x3D, 0x46, 0x49, 0x52, 0x53, 0x54, 0x20, 0x4F, 0x52, 0x47, 0x41, 0x4E, 0x49, 0x5A, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x2F, 0x4F, 0x55, 0x3D, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x20, 0x41, 0x44, 0x4D, 0x49, 0x4E, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x56, 0x45, 0x20, 0x47, 0x52, 0x4F, 0x55, 0x50, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x43, 0x4E, 0x3D, 0x52, 0x45, 0x43, 0x49, 0x50, 0x49, 0x45, 0x4E, 0x54, 0x53, 0x2F, 0x43, 0x4E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00], [UInt8](msg.senderSearchKey!))
        XCTAssertEqual("", msg.displayBcc!)
        XCTAssertEqual("16.0", msg.currentVersionName!)
        XCTAssertEqual("", msg.title!)
        XCTAssertEqual(.normal, msg.importance!)
        XCTAssertEqual(.readOnly, msg.accessLevel!)
        XCTAssertEqual(2, msg.distributionListOneOffMembers!.count)
        XCTAssertEqual(0x00000000, (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.providerUid)
        XCTAssertEqual(0x0000, (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.version)
        XCTAssertEqual([.noRichInfo, .unicode], (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.entryFlags)
        XCTAssertEqual("Contact Middle Last Suffix (email@gmail.com)", (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.displayName)
        XCTAssertEqual("SMTP", (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.addressType)
        XCTAssertEqual("email@gmail.com", (msg.distributionListOneOffMembers![0] as? OneOffEntryID)!.emailAddress)
        XCTAssertEqual(0x00000000, (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.providerUid)
        XCTAssertEqual(0x0000, (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.version)
        XCTAssertEqual([.noRichInfo, .unicode], (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.entryFlags)
        XCTAssertEqual("Display Name", (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.displayName)
        XCTAssertEqual("SMTP", (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.addressType)
        XCTAssertEqual("email@domain.com", (msg.distributionListOneOffMembers![1] as? OneOffEntryID)!.emailAddress)
        XCTAssertEqual(1603898996.0, msg.messageDeliveryTime!.timeIntervalSince1970)
        XCTAssertEqual("Notes\r\n", msg.body!)
        XCTAssertEqual("", msg.companyName!)
        XCTAssertEqual("EX", (msg.getProperty(id: .tagSenderAddressType) as String?)!)
        XCTAssertEqual("", msg.locality!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.internetAccountName!)
        XCTAssertEqual("", msg.stateOrProvince!)
        XCTAssertEqual(0, msg.reminderDelta!)
        XCTAssertEqual("", msg.departmentName!)
        XCTAssertEqual([], msg.addressBookProviderArrayType)
        XCTAssertEqual(1603898996.0, msg.validFlagStringProof!.timeIntervalSince1970)
        XCTAssertEqual(0x00000000, (msg.senderEntryId as? AddressBookEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (msg.senderEntryId as? AddressBookEntryID)!.providerUid)
        XCTAssertEqual(0x00000001, (msg.senderEntryId as? AddressBookEntryID)!.version)
        XCTAssertEqual(.localMailUser, (msg.senderEntryId as? AddressBookEntryID)!.type)
        XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (msg.senderEntryId as? AddressBookEntryID)!.x500DN)
        XCTAssertEqual("", msg.account!)
        XCTAssertEqual([0xA6, 0x34, 0x91, 0x68, 0x0B, 0xBA, 0x2C, 0x42, 0xAA, 0xFA, 0x1E, 0x92, 0x0A, 0x45, 0x5F, 0x04], [UInt8](msg.searchKey!))
        XCTAssertEqual([.openToDelete, .coerceToInbox, .openToMove], msg.sideEffects)
        XCTAssertEqual(1603898996.0, msg.clientSubmitTime!.timeIntervalSince1970)
        XCTAssertFalse(msg.`private`!)
        XCTAssertEqual(2, msg.distributionListMembers!.count)
        XCTAssertEqual(0x00000000, (msg.distributionListMembers![0] as? WrappedEntryId)!.flags)
        XCTAssertEqual(UUID(uuidString: "C091ADD3-519D-CF11-A4A9-00AA0047FAA4"), (msg.distributionListMembers![0] as? WrappedEntryId)!.providerUid)
        XCTAssertEqual(0xC3, (msg.distributionListMembers![0] as? WrappedEntryId)!.type)
        XCTAssertEqual(0x00000000, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.providerUid)
        XCTAssertEqual(.privateMessage, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageType)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.folderDatabaseGuid)
        XCTAssertEqual(3941749185576960, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.folderGlobalCounter)
        XCTAssertEqual(0x0000, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.pad1)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageDatabaseGuid)
        XCTAssertEqual(50978856621834240, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageGlobalCounter)
        XCTAssertEqual(0x0000, ((msg.distributionListMembers![0] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.pad2)
        XCTAssertEqual(0x00000000, (msg.distributionListMembers![1] as? WrappedEntryId)!.flags)
        XCTAssertEqual(UUID(uuidString: "C091ADD3-519D-CF11-A4A9-00AA0047FAA4"), (msg.distributionListMembers![1] as? WrappedEntryId)!.providerUid)
        XCTAssertEqual(0xC3, (msg.distributionListMembers![1] as? WrappedEntryId)!.type)
        XCTAssertEqual(0x00000000, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.flags)
        XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.providerUid)
        XCTAssertEqual(.privateMessage, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageType)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.folderDatabaseGuid)
        XCTAssertEqual(3941749185576960, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.folderGlobalCounter)
        XCTAssertEqual(0x0000, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.pad1)
        XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageDatabaseGuid)
        XCTAssertEqual(50415906668412928, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.messageGlobalCounter)
        XCTAssertEqual(0x0000, ((msg.distributionListMembers![1] as? WrappedEntryId)!.embeddedEntryID as? MessageEntryID)!.pad2)
        XCTAssertEqual("Contact Group", msg.displayName!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.senderEmailAddress!)
        XCTAssertEqual(.notAssigned, msg.taskMode!)
        XCTAssertEqual("00000005\u{01}/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30", msg.internetAccountStamp!)
        XCTAssertEqual("pstreadertests@outlook.com", msg.sentRepresentingName!)
        XCTAssertFalse(msg.agingDontAgeMe!)
        XCTAssertEqual(28591, msg.internetCodepage!)
        XCTAssertEqual("", msg.location!)
        XCTAssertNotNil(msg.rtfCompressed)
        XCTAssertTrue(msg.alternateRecipientAllowed!)
        XCTAssertEqual("", msg.instantMessagingAddress!)

        XCTAssertEqual(0, msg.recipients.count)
        XCTAssertEqual(0, msg.attachments.count)
    }

    static var allTests = [
        ("testSimpleContact", testSimpleContact)
    ]
}
